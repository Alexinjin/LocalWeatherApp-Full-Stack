{"ast":null,"code":"var _jsxFileName = \"/Users/xinjin/Documents/Exercise/WeatherApp/weather-app/src/components/WealtherApp/WealtherApp.js\";\nimport React, { Component } from 'react';\nimport moment from 'moment';\nimport WeatherForm from '../WeatherForm/WeatherForm';\nimport SearchWeatherByCity from '../SearchWeatherByCity/SearchWeatherByCity';\nimport WeatherAppService from \"../../APIs/WeatherDataAPI/WeatherAppService\";\nimport HeaderComponent from '../HeaderComponent/HeaderComponent';\nimport SubHeaderComponent from '../HeaderComponent/SubHeaderComponent';\nimport ErrorMessage from '../ErrorMessage/ErrorMessage';\n\nclass WealtherApp extends Component {\n  constructor(props) {\n    super(props);\n\n    this.searchClickedHandler = cityName => {\n      if (cityName !== this.state.cityName) this.accessWeatherDataHandler(cityName);\n    };\n\n    this.accessWeatherDataHandler = cityName => {\n      WeatherAppService.retrieveLocalWeather(cityName).then(response => {\n        let currentWeather = [];\n        response.data.list.map(day => {\n          currentWeather.push({\n            hour: moment(day.dt_txt).format('HH'),\n            city: cityName,\n            temperature: day.main.temp\n          });\n        });\n        this.setState({\n          currentWeatherData: [...currentWeather],\n          wealtherInfo: [...response.data.list],\n          receivedData: !this.state.receivedData,\n          cityName: cityName,\n          goBack: !this.state.goBack,\n          retrieveDataFailed: false,\n          iconType: response.data.list[0].weather.main\n        });\n      }).catch(error => {\n        this.setState({\n          errorMessage: \"Couldn't find the weather data for this city\",\n          retrieveDataFailed: true\n        });\n      });\n    };\n\n    this.clearClickedHandler = () => {\n      this.setState({\n        receivedData: !this.state.receivedData\n      });\n    };\n\n    this.state = {\n      cityName: '',\n      currentDate: moment(new Date()).format('YYYY-MM-DD'),\n      currentWeatherData: [],\n      receivedData: false,\n      wealtherInfo: [],\n      retrieveDataFailed: false,\n      errorMessage: \"\"\n    };\n    this.searchClickedHandler = this.searchClickedHandler.bind(this);\n    this.clearClickedHandler = this.clearClickedHandler.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid h-100 w-100 row align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid h-20 w-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }, this.state.receivedData && /*#__PURE__*/React.createElement(HeaderComponent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 12\n      }\n    }), !this.state.receivedData && /*#__PURE__*/React.createElement(SubHeaderComponent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 12\n      }\n    }), this.state.receivedData && /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-success btn-lg\",\n      onClick: this.clearClickedHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 12\n      }\n    }, \"Clear\"), !this.state.receivedData && /*#__PURE__*/React.createElement(SearchWeatherByCity, {\n      searchClickedHandler: this.searchClickedHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 12\n      }\n    })), this.state.receivedData && /*#__PURE__*/React.createElement(WeatherForm, {\n      cityName: this.state.cityName,\n      currentDate: this.state.currentDate,\n      currentWeatherData: this.state.currentWeatherData,\n      wealtherInfo: this.state.wealtherInfo,\n      iconType: \"Clouds\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 12\n      }\n    }), this.state.retrieveDataFailed && /*#__PURE__*/React.createElement(ErrorMessage, {\n      message: this.state.errorMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 12\n      }\n    }));\n  }\n\n}\n\nexport default WealtherApp;","map":{"version":3,"sources":["/Users/xinjin/Documents/Exercise/WeatherApp/weather-app/src/components/WealtherApp/WealtherApp.js"],"names":["React","Component","moment","WeatherForm","SearchWeatherByCity","WeatherAppService","HeaderComponent","SubHeaderComponent","ErrorMessage","WealtherApp","constructor","props","searchClickedHandler","cityName","state","accessWeatherDataHandler","retrieveLocalWeather","then","response","currentWeather","data","list","map","day","push","hour","dt_txt","format","city","temperature","main","temp","setState","currentWeatherData","wealtherInfo","receivedData","goBack","retrieveDataFailed","iconType","weather","catch","error","errorMessage","clearClickedHandler","currentDate","Date","bind","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport moment from 'moment'\n\nimport WeatherForm from '../WeatherForm/WeatherForm'\nimport SearchWeatherByCity from '../SearchWeatherByCity/SearchWeatherByCity'\nimport WeatherAppService from \"../../APIs/WeatherDataAPI/WeatherAppService\"\nimport HeaderComponent from '../HeaderComponent/HeaderComponent'\nimport SubHeaderComponent from '../HeaderComponent/SubHeaderComponent'\nimport ErrorMessage from '../ErrorMessage/ErrorMessage'\n\nclass WealtherApp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cityName: '',\n      currentDate: moment(new Date()).format('YYYY-MM-DD'),\n      currentWeatherData: [],\n      receivedData: false,\n      wealtherInfo: [],\n      retrieveDataFailed: false,\n      errorMessage: \"\"\n    };\n    this.searchClickedHandler = this.searchClickedHandler.bind(this);\n    this.clearClickedHandler = this.clearClickedHandler.bind(this);\n  }\n\n  searchClickedHandler = (cityName) => {\n    if (cityName !== this.state.cityName)\n    this.accessWeatherDataHandler(cityName);\n  }\n\n  accessWeatherDataHandler = (cityName) => {\n    WeatherAppService.retrieveLocalWeather(cityName)\n      .then(response => {\n        let currentWeather = [];\n        response.data.list.map( day => {\n            currentWeather.push({\n              hour: moment(day.dt_txt).format('HH'),\n              city: cityName,\n              temperature: day.main.temp\n            })\n        });\n        this.setState({\n          currentWeatherData: [...currentWeather],\n          wealtherInfo: [...response.data.list],\n          receivedData: !this.state.receivedData,\n          cityName: cityName,\n          goBack: !this.state.goBack,\n          retrieveDataFailed: false,\n          iconType: response.data.list[0].weather.main\n        });\n      }).catch(error => {\n        this.setState({\n          errorMessage: \"Couldn't find the weather data for this city\",\n          retrieveDataFailed: true\n        })\n      });\n  }\n\n  clearClickedHandler = () => {\n    this.setState({\n      receivedData: !this.state.receivedData\n    })\n  }\n  \n  render() {\n    return (\n      <div className=\"container-fluid h-100 w-100 row align-items-center\">\n        <div className=\"container-fluid h-20 w-100\">\n        {this.state.receivedData \n        && <HeaderComponent />}\n        {!this.state.receivedData \n        && <SubHeaderComponent />}\n        {this.state.receivedData \n        && <button className=\"btn btn-success btn-lg\" \n        onClick={this.clearClickedHandler}>Clear</button>}\n        {!this.state.receivedData \n        && <SearchWeatherByCity  searchClickedHandler={this.searchClickedHandler}/>}\n        </div>\n        {this.state.receivedData\n        && <WeatherForm \n          cityName={this.state.cityName}\n          currentDate={this.state.currentDate}\n          currentWeatherData={this.state.currentWeatherData}\n          wealtherInfo={this.state.wealtherInfo}\n          iconType={\"Clouds\"}\n        />}\n        {this.state.retrieveDataFailed \n        && <ErrorMessage message={this.state.errorMessage} />}\n      </div>\n    );\n  }\n}\n\nexport default WealtherApp;"]},"metadata":{},"sourceType":"module"}