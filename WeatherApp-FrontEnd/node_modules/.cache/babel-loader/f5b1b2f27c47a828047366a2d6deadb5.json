{"ast":null,"code":"var _jsxFileName = \"/Users/xinjin/Documents/Exercise/WeatherApp/weather-app/src/components/SearchWeatherByCity/SearchWeatherByCity.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nclass SearchWeatherByCity extends Component {\n  constructor(props) {\n    super(props);\n\n    this.searchCityHandler = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.searchClickedHandler = () => {\n      axios.get(\"http://localhost:8080/local-weather-data\").then(response => {\n        let currentWeather = [];\n        response.data.list.map(day => {\n          currentWeather.push({\n            hour: day.dt_txt,\n            city: this.state.cityName,\n            temperature: day.main.temp\n          });\n        });\n        console.log(moment(currentWeather[0].hour).format(\"dddd\"));\n        this.setState({\n          currentWeatherData: [...currentWeather]\n        });\n        this.setState({\n          weatherDater: [...response.data.list]\n        });\n      }).then(() => {\n        this.props.searchClickedHandler(this.state.cityName, this.state.weatherDater, this.state.currentWeatherData);\n      });\n    };\n\n    this.state = {\n      cityName: '',\n      currentWeatherData: [],\n      weatherDater: []\n    };\n    this.searchCityHandler = this.searchCityHandler.bind(this);\n    this.searchClickedHandler = this.searchClickedHandler.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"cityName\",\n      value: this.state.cityName,\n      placeholder: \"Enter a City Name:\",\n      onChange: this.searchCityHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.searchClickedHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, \"Search\"));\n  }\n\n}\n\nexport default SearchWeatherByCity;","map":{"version":3,"sources":["/Users/xinjin/Documents/Exercise/WeatherApp/weather-app/src/components/SearchWeatherByCity/SearchWeatherByCity.js"],"names":["React","Component","axios","SearchWeatherByCity","constructor","props","searchCityHandler","event","setState","target","name","value","searchClickedHandler","get","then","response","currentWeather","data","list","map","day","push","hour","dt_txt","city","state","cityName","temperature","main","temp","console","log","moment","format","currentWeatherData","weatherDater","bind","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AACA,MAAMC,mBAAN,SAAkCF,SAAlC,CAA4C;AAC1CG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAWnBC,iBAXmB,GAWEC,KAAD,IAAW;AAC7B,WAAKC,QAAL,CAAc;AACZ,SAACD,KAAK,CAACE,MAAN,CAAaC,IAAd,GAAqBH,KAAK,CAACE,MAAN,CAAaE;AADtB,OAAd;AAGD,KAfkB;;AAAA,SAgBnBC,oBAhBmB,GAgBI,MAAM;AAC3BV,MAAAA,KAAK,CAACW,GAAN,CAAU,0CAAV,EACCC,IADD,CACMC,QAAQ,IAAI;AAChB,YAAIC,cAAc,GAAG,EAArB;AACAD,QAAAA,QAAQ,CAACE,IAAT,CAAcC,IAAd,CAAmBC,GAAnB,CAAwBC,GAAG,IAAI;AAC3BJ,UAAAA,cAAc,CAACK,IAAf,CAAoB;AAClBC,YAAAA,IAAI,EAAEF,GAAG,CAACG,MADQ;AAElBC,YAAAA,IAAI,EAAE,KAAKC,KAAL,CAAWC,QAFC;AAGlBC,YAAAA,WAAW,EAAEP,GAAG,CAACQ,IAAJ,CAASC;AAHJ,WAApB;AAKH,SAND;AAOFC,QAAAA,OAAO,CAACC,GAAR,CAAYC,MAAM,CAAChB,cAAc,CAAC,CAAD,CAAd,CAAkBM,IAAnB,CAAN,CAA+BW,MAA/B,CAAsC,MAAtC,CAAZ;AACA,aAAKzB,QAAL,CAAc;AAAC0B,UAAAA,kBAAkB,EAAE,CAAC,GAAGlB,cAAJ;AAArB,SAAd;AACA,aAAKR,QAAL,CAAc;AAAC2B,UAAAA,YAAY,EAAE,CAAC,GAAGpB,QAAQ,CAACE,IAAT,CAAcC,IAAlB;AAAf,SAAd;AACC,OAbD,EAaGJ,IAbH,CAaS,MAAM;AACb,aAAKT,KAAL,CAAWO,oBAAX,CAAgC,KAAKa,KAAL,CAAWC,QAA3C,EAAqD,KAAKD,KAAL,CAAWU,YAAhE,EAA8E,KAAKV,KAAL,CAAWS,kBAAzF;AACD,OAfD;AAgBD,KAjCkB;;AAEjB,SAAKT,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,EADC;AAEXQ,MAAAA,kBAAkB,EAAE,EAFT;AAGXC,MAAAA,YAAY,EAAC;AAHF,KAAb;AAKA,SAAK7B,iBAAL,GAAyB,KAAKA,iBAAL,CAAuB8B,IAAvB,CAA4B,IAA5B,CAAzB;AACA,SAAKxB,oBAAL,GAA4B,KAAKA,oBAAL,CAA0BwB,IAA1B,CAA+B,IAA/B,CAA5B;AACD;;AA0BDC,EAAAA,MAAM,GAAG;AACP,wBACE,uDACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWC,QAHpB;AAIE,MAAA,WAAW,EAAC,oBAJd;AAKE,MAAA,QAAQ,EAAE,KAAKpB,iBALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAOE;AAAQ,MAAA,OAAO,EAAE,KAAKM,oBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,CADF;AAWD;;AAhDyC;;AAmD5C,eAAeT,mBAAf","sourcesContent":["import React, { Component } from 'react'\nimport axios from 'axios';\nclass SearchWeatherByCity extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cityName: '',\n      currentWeatherData: [],\n      weatherDater:[]\n    };\n    this.searchCityHandler = this.searchCityHandler.bind(this);\n    this.searchClickedHandler = this.searchClickedHandler.bind(this);\n  }\n\n  searchCityHandler = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n  searchClickedHandler = () => {\n    axios.get(\"http://localhost:8080/local-weather-data\")\n    .then(response => {\n      let currentWeather = [];\n      response.data.list.map( day => {\n          currentWeather.push({\n            hour: day.dt_txt,\n            city: this.state.cityName,\n            temperature: day.main.temp\n          })\n      })\n    console.log(moment(currentWeather[0].hour).format(\"dddd\"))\n    this.setState({currentWeatherData: [...currentWeather]})\n    this.setState({weatherDater: [...response.data.list]})\n    }).then( () => {\n      this.props.searchClickedHandler(this.state.cityName, this.state.weatherDater, this.state.currentWeatherData);\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <input \n          type=\"text\" \n          name=\"cityName\" \n          value={this.state.cityName} \n          placeholder=\"Enter a City Name:\"\n          onChange={this.searchCityHandler} /> \n        <button onClick={this.searchClickedHandler}>Search</button>\n      </>\n    );\n  }\n}\n\nexport default SearchWeatherByCity;"]},"metadata":{},"sourceType":"module"}