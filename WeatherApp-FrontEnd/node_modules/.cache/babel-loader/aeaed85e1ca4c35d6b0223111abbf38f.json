{"ast":null,"code":"var _jsxFileName = \"/Users/xinjin/Documents/Exercise/WeatherApp/weather-app/src/components/WeatherForeCast/ForeCastComponent/ForCastComponent.js\";\nimport React, { Component } from 'react';\nimport moment from 'moment';\nimport logo from \"../../../logo.svg\";\nimport WeatherIcon from '../../WeatherIcon/WeatherIcon';\n\nclass ForCastComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidUpdate = prevProps => {\n      if (prevProps.unitSimbol !== this.props.unitSimbol) {\n        this.setState({\n          unitSimbol: this.props.unitSimbol\n        });\n      }\n    };\n\n    this.selectedHandler = () => {\n      console.log(\"test\");\n    };\n\n    this.state = {\n      pastDay: this.props.pastDay,\n      iconType: this.props.iconType,\n      iconSize: this.props.iconSize,\n      maxTemp: this.props.maxTemp,\n      unitSimbol: this.props.unitSimbol\n    };\n    this.selectedHandler = this.selectedHandler.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn mx-1\",\n      style: {\n        width: \"14rem\"\n      },\n      onClick: this.selectedHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(WeatherIcon, {\n      iconType: this.state.iconType,\n      iconSize: this.state.iconSize,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"card-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }\n    }, moment().add(this.state.pastDay, 'days').format('dddd') + \", \" + moment().add(this.state.pastDay, 'days').format('MMM Do')), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }\n    }, this.state.maxTemp, this.state.unitSimbol));\n  }\n\n}\n\nexport default ForCastComponent;","map":{"version":3,"sources":["/Users/xinjin/Documents/Exercise/WeatherApp/weather-app/src/components/WeatherForeCast/ForeCastComponent/ForCastComponent.js"],"names":["React","Component","moment","WeatherIcon","ForCastComponent","constructor","props","componentDidUpdate","prevProps","unitSimbol","setState","selectedHandler","console","log","state","pastDay","iconType","iconSize","maxTemp","bind","render","width","add","format"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,QAAnB;;AAEA,OAAOC,WAAP,MAAwB,+BAAxB;;AACA,MAAMC,gBAAN,SAA+BH,SAA/B,CAAyC;AACvCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAWnBC,kBAXmB,GAWGC,SAAD,IAAe;AAClC,UAAIA,SAAS,CAACC,UAAV,KAAyB,KAAKH,KAAL,CAAWG,UAAxC,EAAoD;AAClD,aAAKC,QAAL,CAAc;AACZD,UAAAA,UAAU,EAAE,KAAKH,KAAL,CAAWG;AADX,SAAd;AAGD;AAEF,KAlBkB;;AAAA,SAmBnBE,eAnBmB,GAmBD,MAAM;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACD,KArBkB;;AAEjB,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,KAAKT,KAAL,CAAWS,OADT;AAEXC,MAAAA,QAAQ,EAAE,KAAKV,KAAL,CAAWU,QAFV;AAGXC,MAAAA,QAAQ,EAAE,KAAKX,KAAL,CAAWW,QAHV;AAIXC,MAAAA,OAAO,EAAE,KAAKZ,KAAL,CAAWY,OAJT;AAKXT,MAAAA,UAAU,EAAE,KAAKH,KAAL,CAAWG;AALZ,KAAb;AAOA,SAAKE,eAAL,GAAuB,KAAKA,eAAL,CAAqBQ,IAArB,CAA0B,IAA1B,CAAvB;AACD;;AAYDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAQ,MAAA,SAAS,EAAC,UAAlB;AACE,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAE;AAAR,OADT;AAEE,MAAA,OAAO,EAAE,KAAKV,eAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAGI,oBAAC,WAAD;AAAa,MAAA,QAAQ,EAAE,KAAKG,KAAL,CAAWE,QAAlC;AACE,MAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWG,QADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,eAKI;AAAG,MAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGf,MAAM,GAAGoB,GAAT,CAAa,KAAKR,KAAL,CAAWC,OAAxB,EAAgC,MAAhC,EAAwCQ,MAAxC,CAA+C,MAA/C,IAAyD,IAAzD,GACDrB,MAAM,GAAGoB,GAAT,CAAa,KAAKR,KAAL,CAAWC,OAAxB,EAAgC,MAAhC,EAAwCQ,MAAxC,CAA+C,QAA/C,CAFF,CALJ,eASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKT,KAAL,CAAWI,OAAf,EAAwB,KAAKJ,KAAL,CAAWL,UAAnC,CATJ,CADF;AAaD;;AArCsC;;AAwCzC,eAAeL,gBAAf","sourcesContent":["import React, { Component } from 'react'\nimport moment from 'moment'\nimport logo from '../../../logo.svg'\nimport WeatherIcon from '../../WeatherIcon/WeatherIcon'\nclass ForCastComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pastDay: this.props.pastDay,\n      iconType: this.props.iconType,\n      iconSize: this.props.iconSize,\n      maxTemp: this.props.maxTemp,\n      unitSimbol: this.props.unitSimbol\n    };\n    this.selectedHandler = this.selectedHandler.bind(this);\n  }\n  componentDidUpdate = (prevProps) => {\n    if (prevProps.unitSimbol !== this.props.unitSimbol) {\n      this.setState({\n        unitSimbol: this.props.unitSimbol\n      })\n    }\n    \n  }\n  selectedHandler = () => {\n    console.log(\"test\")\n  }\n  render() {\n    return (\n      <button className=\"btn mx-1\" \n        style={{width: \"14rem\"}} \n        onClick={this.selectedHandler}>\n          <WeatherIcon iconType={this.state.iconType} \n            iconSize={this.state.iconSize}/>\n          <p className=\"card-text\">\n            {moment().add(this.state.pastDay,'days').format('dddd') + \", \" +\n            moment().add(this.state.pastDay,'days').format('MMM Do')}\n          </p>\n          <p>{this.state.maxTemp}{this.state.unitSimbol}</p>\n      </button> \n    );\n  }\n}\n\nexport default ForCastComponent;"]},"metadata":{},"sourceType":"module"}