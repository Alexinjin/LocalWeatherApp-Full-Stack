{"ast":null,"code":"var _jsxFileName = \"/Users/xinjin/Documents/Exercise/WeatherApp/weather-app/src/components/WealtherApp/WealtherApp.js\";\nimport React, { Component } from 'react';\nimport moment from 'moment';\nimport WeatherData from '../WeatherData/WeatherData';\nimport SearchWeatherByCity from '../SearchWeatherByCity/SearchWeatherByCity';\n\nclass WealtherApp extends Component {\n  constructor(props) {\n    super(props);\n\n    this.searchClickedHandler = value => {\n      this.setState({\n        receivedData: true,\n        cityName: value\n      }); // axios.get(\"http://localhost:8080/local-weather-data\")\n      // .then(response => {\n      //   console.log(response)\n      //   this.setState({receivedData: true})\n      // });\n    };\n\n    this.state = {\n      cityName: '',\n      currentDate: moment(new Date()).format('YYYY-MM-DD'),\n      currentWeatherData: [{\n        hour: \"0\",\n        city: \"Tokyo\",\n        temperature: 7\n      }, {\n        hour: \"1\",\n        city: \"Tokyo\",\n        temperature: 6.9\n      }, {\n        hour: \"2\",\n        city: \"Tokyo\",\n        temperature: 9.5\n      }, {\n        hour: \"3\",\n        city: \"Tokyo\",\n        temperature: 8.5\n      }, {\n        hour: \"4\",\n        city: \"Tokyo\",\n        temperature: 11.9\n      }, {\n        hour: \"5\",\n        city: \"Tokyo\",\n        temperature: 25.2\n      }, {\n        hour: \"6\",\n        city: \"Tokyo\",\n        temperature: 16.6\n      }, {\n        hour: \"7\",\n        city: \"Tokyo\",\n        temperature: 23.3\n      }, {\n        hour: \"8\",\n        city: \"Tokyo\",\n        temperature: 18.3\n      }, {\n        hour: \"9\",\n        city: \"Tokyo\",\n        temperature: 13.9\n      }, {\n        hour: \"10\",\n        city: \"Tokyo\",\n        temperature: 9.6\n      }],\n      receivedData: false,\n      wealtherInfo: [{\n        tempature: 18\n      }]\n    }; // this.searchCityHandler = this.searchCityHandler.bind(this);\n    // this.searchClickedHandler = this.searchClickedHandler.bind(this);\n  } // searchCityHandler = (event) => {\n  //   this.setState({\n  //     [event.target.name]: event.target.value\n  //   });\n  //   console.log(event.target.value)\n  // }\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid h-100 w-100 row align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid h-20 w-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }, this.state.receivedData && /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"text-left ml-4 text-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 12\n      }\n    }, \"WEATHER APP\"), !this.state.receivedData && /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"display-3 text-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 12\n      }\n    }, \"WEATHER APP\"), /*#__PURE__*/React.createElement(SearchWeatherByCity, {\n      searchClickedHandler: this.searchClickedHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }\n    })), this.state.receivedData && /*#__PURE__*/React.createElement(WeatherData, {\n      cityName: this.state.cityName,\n      currentDate: this.state.currentDate,\n      currentWeatherData: this.state.currentWeatherData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nexport default WealtherApp;","map":{"version":3,"sources":["/Users/xinjin/Documents/Exercise/WeatherApp/weather-app/src/components/WealtherApp/WealtherApp.js"],"names":["React","Component","moment","WeatherData","SearchWeatherByCity","WealtherApp","constructor","props","searchClickedHandler","value","setState","receivedData","cityName","state","currentDate","Date","format","currentWeatherData","hour","city","temperature","wealtherInfo","tempature","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport moment from 'moment'\n\nimport WeatherData from '../WeatherData/WeatherData'\nimport SearchWeatherByCity from '../SearchWeatherByCity/SearchWeatherByCity'\nclass WealtherApp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cityName: '',\n      currentDate: moment(new Date()).format('YYYY-MM-DD'),\n      currentWeatherData: [\n        {\n          hour: \"0\",\n          city: \"Tokyo\",\n          temperature: 7\n        },\n        {\n          hour: \"1\",\n            city: \"Tokyo\",\n            temperature: 6.9\n        },\n        {\n          hour: \"2\",\n          city: \"Tokyo\",\n          temperature: 9.5\n        },\n        {\n          hour: \"3\",\n          city: \"Tokyo\",\n          temperature: 8.5\n        },\n        {\n          hour: \"4\",\n          city: \"Tokyo\",\n          temperature: 11.9\n        },\n        {\n          hour: \"5\",\n          city: \"Tokyo\",\n          temperature: 25.2\n        },\n        {\n          hour: \"6\",\n          city: \"Tokyo\",\n          temperature: 16.6\n        },\n        {\n          hour: \"7\",\n          city: \"Tokyo\",\n          temperature: 23.3\n        },\n        {\n          hour: \"8\",\n          city: \"Tokyo\",\n          temperature: 18.3\n        },\n        {\n          hour: \"9\",\n          city: \"Tokyo\",\n          temperature: 13.9\n        },\n        {\n          hour: \"10\",\n          city: \"Tokyo\",\n          temperature: 9.6\n        }\n      ],\n      receivedData: false,\n      wealtherInfo: [{\n        tempature: 18\n      }]\n    };\n    // this.searchCityHandler = this.searchCityHandler.bind(this);\n    // this.searchClickedHandler = this.searchClickedHandler.bind(this);\n  }\n  // searchCityHandler = (event) => {\n  //   this.setState({\n  //     [event.target.name]: event.target.value\n  //   });\n  //   console.log(event.target.value)\n  // }\n  searchClickedHandler = (value) => {\n    this.setState({\n      receivedData: true,\n      cityName: value\n    })\n    // axios.get(\"http://localhost:8080/local-weather-data\")\n    // .then(response => {\n    //   console.log(response)\n    //   this.setState({receivedData: true})\n    // });\n  }\n  \n  render() {\n    return (\n      <div className=\"container-fluid h-100 w-100 row align-items-center\">\n        <div className=\"container-fluid h-20 w-100\">\n        {this.state.receivedData \n        && <h5 className=\"text-left ml-4 text-light\">WEATHER APP</h5>}\n        {!this.state.receivedData \n        && <h1 className=\"display-3 text-light\">WEATHER APP</h1>}\n        \n          {/* <input \n                type=\"text\" \n                name=\"cityName\" \n                value={this.state.username} \n                placeholder=\"Enter a City Name:\"\n                onChange={this.searchCityHandler} /> \n          <button onClick={this.searchClickedHandler}>Search</button> */}\n          <SearchWeatherByCity  searchClickedHandler={this.searchClickedHandler}/>\n        </div>\n\n          {this.state.receivedData\n            && \n            <WeatherData \n              cityName={this.state.cityName}\n              currentDate={this.state.currentDate}\n              currentWeatherData={this.state.currentWeatherData}/>\n          }\n      </div>\n    );\n  }\n}\n\nexport default WealtherApp;"]},"metadata":{},"sourceType":"module"}