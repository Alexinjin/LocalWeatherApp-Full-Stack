{"ast":null,"code":"var _jsxFileName = \"/Users/xinjin/Documents/Exercise/WeatherApp/weather-app/src/components/WealtherApp/WealtherApp.js\";\nimport React, { Component } from 'react';\nimport moment from 'moment';\nimport WeatherForm from '../WeatherForm/WeatherForm';\nimport SearchWeatherByCity from '../SearchWeatherByCity/SearchWeatherByCity';\nimport WeatherAppService from \"../../APIs/WeatherDataAPI/WeatherAppService\";\nimport HeaderComponent from '../HeaderComponent/HeaderComponent';\n\nclass WealtherApp extends Component {\n  constructor(props) {\n    super(props);\n\n    this.searchClickedHandler = cityName => {\n      if (cityName !== this.state.cityName) this.accessWeatherDataHandler(cityName);\n    };\n\n    this.accessWeatherDataHandler = cityName => {\n      WeatherAppService.retrieveLocalWeather(cityName).then(response => {\n        let currentWeather = [];\n        response.data.list.map(day => {\n          currentWeather.push({\n            hour: moment(day.dt_txt).format('HH'),\n            city: cityName,\n            temperature: day.main.temp\n          });\n        });\n        this.setState({\n          currentWeatherData: [...currentWeather],\n          wealtherInfo: [...response.data.list],\n          receivedData: !this.state.receivedData,\n          cityName: cityName,\n          goBack: !this.state.goBack\n        });\n        console.log(\"success\");\n      });\n    };\n\n    this.clearClickedHandler = () => {\n      this.setState({\n        receivedData: !this.state.receivedData\n      });\n    };\n\n    this.state = {\n      cityName: '',\n      currentDate: moment(new Date()).format('YYYY-MM-DD'),\n      currentWeatherData: [],\n      receivedData: false,\n      wealtherInfo: []\n    };\n    this.searchClickedHandler = this.searchClickedHandler.bind(this);\n    this.clearClickedHandler = this.clearClickedHandler.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid h-100 w-100 row align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid h-20 w-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }, this.state.receivedData && /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"text-left ml-4 text-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 12\n      }\n    }, \"WEATHER APP\"), /*#__PURE__*/React.createElement(HeaderComponent, {\n      receivedData: this.state.receivedData,\n      style: \"display-3 text-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }), this.state.receivedData && /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-success\",\n      onClick: this.clearClickedHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 12\n      }\n    }, \"Clear\"), \"&& \", /*#__PURE__*/React.createElement(SearchWeatherByCity, {\n      searchClickedHandler: this.searchClickedHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 12\n      }\n    }), \"}\"), this.state.receivedData && /*#__PURE__*/React.createElement(WeatherForm, {\n      cityName: this.state.cityName,\n      currentDate: this.state.currentDate,\n      currentWeatherData: this.state.currentWeatherData,\n      wealtherInfo: this.state.wealtherInfo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 14\n      }\n    }));\n  }\n\n}\n\nexport default WealtherApp;","map":{"version":3,"sources":["/Users/xinjin/Documents/Exercise/WeatherApp/weather-app/src/components/WealtherApp/WealtherApp.js"],"names":["React","Component","moment","WeatherForm","SearchWeatherByCity","WeatherAppService","HeaderComponent","WealtherApp","constructor","props","searchClickedHandler","cityName","state","accessWeatherDataHandler","retrieveLocalWeather","then","response","currentWeather","data","list","map","day","push","hour","dt_txt","format","city","temperature","main","temp","setState","currentWeatherData","wealtherInfo","receivedData","goBack","console","log","clearClickedHandler","currentDate","Date","bind","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport moment from 'moment'\n\nimport WeatherForm from '../WeatherForm/WeatherForm'\nimport SearchWeatherByCity from '../SearchWeatherByCity/SearchWeatherByCity'\nimport WeatherAppService from \"../../APIs/WeatherDataAPI/WeatherAppService\";\nimport HeaderComponent from '../HeaderComponent/HeaderComponent';\nclass WealtherApp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cityName: '',\n      currentDate: moment(new Date()).format('YYYY-MM-DD'),\n      currentWeatherData: [],\n      receivedData: false,\n      wealtherInfo: []\n    };\n    this.searchClickedHandler = this.searchClickedHandler.bind(this);\n    this.clearClickedHandler = this.clearClickedHandler.bind(this);\n  }\n\n  searchClickedHandler = (cityName) => {\n    if (cityName !== this.state.cityName)\n    this.accessWeatherDataHandler(cityName);\n  }\n\n  accessWeatherDataHandler = (cityName) => {\n    WeatherAppService.retrieveLocalWeather(cityName)\n      .then(response => {\n        let currentWeather = [];\n        response.data.list.map( day => {\n            currentWeather.push({\n              hour: moment(day.dt_txt).format('HH'),\n              city: cityName,\n              temperature: day.main.temp\n            })\n            \n        });\n        this.setState({\n          currentWeatherData: [...currentWeather],\n          wealtherInfo: [...response.data.list],\n          receivedData: !this.state.receivedData,\n          cityName: cityName,\n          goBack: !this.state.goBack\n        });\n        console.log(\"success\")\n      });\n  }\n\n  clearClickedHandler = () => {\n    this.setState({\n      receivedData: !this.state.receivedData\n    })\n  }\n  \n  render() {\n    return (\n      <div className=\"container-fluid h-100 w-100 row align-items-center\">\n        <div className=\"container-fluid h-20 w-100\">\n        {this.state.receivedData \n        && <h5 className=\"text-left ml-4 text-light\">WEATHER APP</h5>}\n        \n        <HeaderComponent receivedData={this.state.receivedData} style={\"display-3 text-light\"}/>\n        {this.state.receivedData \n        && <button className=\"btn btn-success\" onClick={this.clearClickedHandler}>Clear</button>}\n        {/* {!this.state.receivedData \n        && <h1 className=\"display-3 text-light\">WEATHER APP</h1>}\n        {!this.state.receivedData  */}\n        && <SearchWeatherByCity  searchClickedHandler={this.searchClickedHandler}/>}\n\n        </div>\n          {this.state.receivedData\n          && <WeatherForm \n            cityName={this.state.cityName}\n            currentDate={this.state.currentDate}\n            currentWeatherData={this.state.currentWeatherData}\n            wealtherInfo={this.state.wealtherInfo}\n          />}\n      </div>\n    );\n  }\n}\n\nexport default WealtherApp;"]},"metadata":{},"sourceType":"module"}