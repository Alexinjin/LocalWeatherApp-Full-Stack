{"ast":null,"code":"var _jsxFileName = \"/Users/xinjin/Documents/Exercise/WeatherApp/weather-app/src/components/WeatherForm/WeatherForm.js\";\nimport React, { Component } from 'react';\nimport { Chart, Line, Axis } from 'bizcharts';\nimport WeatherForeCast from '../WeatherForeCast/WeatherForeCast';\nimport WeatherIcon from \"../WeatherIcon/WeatherIcon\";\nimport * as styles from './WeatherForm.module.css';\nimport { sun, rain, cloud, thunder, snow, drizzle } from '../../assets/images/weatherIcons';\n\nclass WeatherForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      switch (this.state.iconType) {\n        case \"Clear\":\n          this.setState({\n            iconName: sun\n          });\n          break;\n\n        case \"Rain\":\n          this.setState({\n            iconName: rain\n          });\n          break;\n\n        case \"Clouds\":\n          this.setState({\n            iconName: cloud\n          });\n          break;\n\n        case \"Drizzle\":\n          this.setState({\n            iconName: drizzle\n          });\n          break;\n\n        case \"Snow\":\n          this.setState({\n            iconName: snow\n          });\n          break;\n\n        case \"Thunderstorm\":\n          this.setState({\n            iconName: thunder\n          });\n          break;\n\n        default:\n          this.setState({\n            iconName: sun\n          });\n      }\n    };\n\n    this.state = {\n      cityName: this.props.cityName,\n      wealtherInfo: this.props.wealtherInfo,\n      currentDate: this.props.currentDate,\n      currentHighestTemp: this.props.wealtherInfo[3].main.temp,\n      currentWeatherData: this.props.currentWeatherData,\n      iconType: this.props.iconType,\n      iconName: null\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid mx-1 h-75 w-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"text-left text-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }, this.state.cityName), /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"text-left text-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    }, this.state.currentDate)), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.currentWeatherWrapper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(WeatherIcon, {\n      iconName: this.state.iconName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      className: styles.currentTempature,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    }, this.state.currentHighestTemp), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.weatherTable,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Chart, {\n      scale: {\n        temperature: {\n          min: 0\n        }\n      },\n      padding: [30, 20, 50, 40],\n      autoFit: true,\n      height: 320,\n      data: this.state.currentWeatherData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Line, {\n      shape: \"smooth\",\n      position: \"hour*temperature\",\n      color: \"city\",\n      label: \"temperature\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 15\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid w-100 pt-5 d-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(WeatherForeCast, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default WeatherForm;","map":{"version":3,"sources":["/Users/xinjin/Documents/Exercise/WeatherApp/weather-app/src/components/WeatherForm/WeatherForm.js"],"names":["React","Component","Chart","Line","Axis","WeatherForeCast","WeatherIcon","styles","sun","rain","cloud","thunder","snow","drizzle","WeatherForm","constructor","props","componentDidMount","state","iconType","setState","iconName","cityName","wealtherInfo","currentDate","currentHighestTemp","main","temp","currentWeatherData","render","currentWeatherWrapper","currentTempature","weatherTable","temperature","min"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Chart, Line, Axis } from 'bizcharts';\nimport WeatherForeCast from '../WeatherForeCast/WeatherForeCast'\nimport WeatherIcon from \"../WeatherIcon/WeatherIcon\";\nimport * as styles from './WeatherForm.module.css'\nimport {\n  sun,\n  rain, \n  cloud,\n  thunder,\n  snow,\n  drizzle\n} from '../../assets/images/weatherIcons'\n\n\n\nclass WeatherForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cityName: this.props.cityName,\n      wealtherInfo: this.props.wealtherInfo,\n      currentDate: this.props.currentDate,\n      currentHighestTemp: this.props.wealtherInfo[3].main.temp,\n      currentWeatherData: this.props.currentWeatherData,\n      iconType: this.props.iconType,\n      iconName: null\n    };\n  }\n  componentDidMount = () => {\n    switch(this.state.iconType) {\n      case \"Clear\":\n        this.setState({iconName: sun});\n        break;\n      case \"Rain\":\n        this.setState({iconName: rain});\n        break;\n      case \"Clouds\":\n        this.setState({iconName: cloud});\n        break;\n      case \"Drizzle\":\n        this.setState({iconName: drizzle});\n        break;\n      case \"Snow\":\n        this.setState({iconName: snow});\n        break;\n      case \"Thunderstorm\":\n        this.setState({iconName: thunder});\n        break;\n      default:\n        this.setState({iconName: sun});\n    }\n  }\n  render() {\n    return (\n      <div className=\"container-fluid mx-1 h-75 w-100\">\n        <div className=\"container-fluid\">\n          <h1 className=\"text-left text-light\">{this.state.cityName}</h1>\n          <h2 className=\"text-left text-light\">{this.state.currentDate}</h2>\n        </div>\n        <div className={styles.currentWeatherWrapper}>\n          {/* <img src={this.state.iconName} className=\"h-50\" /> */}\n          <WeatherIcon iconName={this.state.iconName}/>\n          <h1 className={styles.currentTempature}>\n            {this.state.currentHighestTemp}\n          </h1>\n          <div className={styles.weatherTable}>\n            <Chart scale={{temperature: {min: 0}}} \n              padding={[30,20,50,40]} \n              autoFit \n              height={320} \n              data={this.state.currentWeatherData}>\n              <Line shape=\"smooth\" \n                position=\"hour*temperature\" \n                color=\"city\" \n                label=\"temperature\"  />\n            </Chart>\n          </div>\n        </div>\n        <div className=\"container-fluid w-100 pt-5 d-flex\">\n          <WeatherForeCast />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default WeatherForm;"]},"metadata":{},"sourceType":"module"}