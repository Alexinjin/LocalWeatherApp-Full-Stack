{"ast":null,"code":"var _jsxFileName = \"/Users/xinjin/Documents/Exercise/WeatherApp/weather-app/src/components/WealtherApp/WealtherApp.js\";\nimport React, { Component } from 'react';\nimport moment from 'moment';\nimport WeatherForm from '../WeatherForm/WeatherForm';\nimport SearchWeatherByCity from '../SearchWeatherByCity/SearchWeatherByCity';\nimport WeatherAppService from \"../../APIs/WeatherDataAPI/WeatherAppService\";\n\nclass WealtherApp extends Component {\n  constructor(props) {\n    super(props);\n\n    this.searchClickedHandler = cityName => {\n      this.refreshWeatherData(cityName);\n    };\n\n    this.refreshWeatherData = cityName => {\n      WeatherAppService.retrieveLocalWeather(cityName).then(response => {\n        let currentWeather = [];\n        response.data.list.map(day => {\n          currentWeather.push({\n            hour: moment(day.dt_txt).format('HH'),\n            city: cityName,\n            temperature: day.main.temp\n          });\n        });\n        console.log(\"success\");\n        this.setState({\n          currentWeatherData: [...currentWeather],\n          wealtherInfo: [...response.data.list],\n          receivedData: true,\n          cityName: cityName\n        });\n      });\n    };\n\n    this.state = {\n      cityName: '',\n      currentDate: moment(new Date()).format('YYYY-MM-DD'),\n      currentWeatherData: [],\n      receivedData: false,\n      wealtherInfo: []\n    };\n    this.searchClickedHandler = this.searchClickedHandler.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid h-100 w-100 row align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid h-20 w-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }, this.state.receivedData && /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"text-left ml-4 text-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 12\n      }\n    }, \"WEATHER APP\"), !this.state.receivedData && /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"display-3 text-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 12\n      }\n    }, \"WEATHER APP\"), /*#__PURE__*/React.createElement(SearchWeatherByCity, {\n      searchClickedHandler: this.searchClickedHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    })), this.state.receivedData && /*#__PURE__*/React.createElement(WeatherForm, {\n      cityName: this.state.cityName,\n      currentDate: this.state.currentDate,\n      currentWeatherData: this.state.currentWeatherData,\n      wealtherInfo: this.state.wealtherInfo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 14\n      }\n    }));\n  }\n\n}\n\nexport default WealtherApp;","map":{"version":3,"sources":["/Users/xinjin/Documents/Exercise/WeatherApp/weather-app/src/components/WealtherApp/WealtherApp.js"],"names":["React","Component","moment","WeatherForm","SearchWeatherByCity","WeatherAppService","WealtherApp","constructor","props","searchClickedHandler","cityName","refreshWeatherData","retrieveLocalWeather","then","response","currentWeather","data","list","map","day","push","hour","dt_txt","format","city","temperature","main","temp","console","log","setState","currentWeatherData","wealtherInfo","receivedData","state","currentDate","Date","bind","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport moment from 'moment'\n\nimport WeatherForm from '../WeatherForm/WeatherForm'\nimport SearchWeatherByCity from '../SearchWeatherByCity/SearchWeatherByCity'\nimport WeatherAppService from \"../../APIs/WeatherDataAPI/WeatherAppService\";\nclass WealtherApp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cityName: '',\n      currentDate: moment(new Date()).format('YYYY-MM-DD'),\n      currentWeatherData: [],\n      receivedData: false,\n      wealtherInfo: []\n    };\n    this.searchClickedHandler = this.searchClickedHandler.bind(this);\n  }\n\n  searchClickedHandler = (cityName) => {\n    this.refreshWeatherData(cityName);\n  }\n\n  refreshWeatherData = (cityName) => {\n    WeatherAppService.retrieveLocalWeather(cityName)\n      .then(response => {\n        let currentWeather = [];\n        response.data.list.map( day => {\n            currentWeather.push({\n              hour: moment(day.dt_txt).format('HH'),\n              city: cityName,\n              temperature: day.main.temp\n            })\n            \n        })\n        console.log(\"success\")\n        this.setState({\n          currentWeatherData: [...currentWeather],\n          wealtherInfo: [...response.data.list],\n          receivedData: true,\n          cityName: cityName\n        });\n      });\n  }\n  \n  render() {\n    return (\n      <div className=\"container-fluid h-100 w-100 row align-items-center\">\n        <div className=\"container-fluid h-20 w-100\">\n        {this.state.receivedData \n        && <h5 className=\"text-left ml-4 text-light\">WEATHER APP</h5>}\n        {!this.state.receivedData \n        && <h1 className=\"display-3 text-light\">WEATHER APP</h1>}\n        <SearchWeatherByCity  searchClickedHandler={this.searchClickedHandler}/>\n        </div>\n          {this.state.receivedData\n          && <WeatherForm \n            cityName={this.state.cityName}\n            currentDate={this.state.currentDate}\n            currentWeatherData={this.state.currentWeatherData}\n            wealtherInfo={this.state.wealtherInfo}\n            \n          />}\n      </div>\n    );\n  }\n}\n\nexport default WealtherApp;"]},"metadata":{},"sourceType":"module"}